%form.ui.form{ novalidate: true, name: 'consumptionPaymentForm' }
  .field{ ng_class: "{ 'error' : consumptionPaymentForm['payment[value]'].$touched && consumptionPaymentForm['payment[value]'].$invalid }" }
    = label :payment, :value, 'Value'
    = text_field :payment, :value, { type: "number",
                                     required: true,
                                     ng_model: "consumption_ctrl.form_payment.value",
                                     min: '0.01',
                                     step: '0.01' }

    .ui.pointing.red.label.error-messages{ ng_messages: "consumptionPaymentForm['payment[value]'].$error" }
      .error{ ng_message: :required } Please provide a value for this payment.
      .error{ ng_message: :min } The value must be positive
      .error{ ng_message: :number } This does not look like a number

  .field{ ng_class: "{ 'error' : consumptionPaymentForm['payment[observations]'].$touched && consumptionPaymentForm['payment[observations]'].$invalid }" }
    = label :payment, :observations, 'Observations'
    = text_field :payment, :observations, { ng_model: "consumption_ctrl.form_payment.observations" }

  .field
    .ui.mini.fluid.buttons
      .ui.basic.button{ ng_click: 'consumption_ctrl.clearFormPayment()'} Cancel

      .ui.primary.button{ ng_click: 'consumption_ctrl.saveFormPayment(consumptionPaymentForm)',
                          ng_class: "{ 'disabled' : consumptionPaymentForm.$invalid }" } Save Payment
